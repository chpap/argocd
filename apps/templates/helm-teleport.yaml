apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: teleport
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  syncPolicy:
    automated: {}
    syncOptions:
    - CreateNamespace=true

  destination:
    namespace: teleport
    server: {{ .Values.spec.destination.server }}
  project: default
  source:
    chart: teleport-cluster
      #repoURL: https://github.com/gravitational/teleport.git
    repoURL: https://charts.releases.teleport.dev
    targetRevision: 17.4.6
    helm:
      # Values file as block file. This takes precedence over values
      valuesObject:
        authentication:
        annotations:
          serviceAccount:
              eks.amazonaws.com/role-arn: "arn:aws:iam::250423955575:role/k3s-RoleVelero-staging"
              #eks.amazonaws.com/audience: "sts.amazonaws.com"
          type: github
        clusterName: "teleport.chpap.net"
        env:
          TZ: "Europe/Athens"
        proxyProtocol: "off"
        proxyListenerMode: "multiplex"
        service:
          type: ClusterIP
        proxy:
          highAvailability:
            certManager:
              enabled: true
              issuerName: "letsencrypt-prod53"
    # Kind of Issuer that cert-manager should look for.
    # This defaults to 'Issuer' to keep everything contained within the teleport namespace.
              issuerKind: ClusterIssuer
          annotations:
            ingress:
              nginx.ingress.kubernetes.io/backend-protocol: "HTTPS" 
        ingress:
          enabled: true
          spec: 
             ingressClassName: nginx 

      # Extra parameters to set (same as setting through values.yaml, but these take precedence)
      #      parameters:
      # - name: "ingress.enabled"
      #  value: "true"
      #  forceString: true # ensures that value is treated as a string
      #  mariadb.mariadb.svc.cluster.local

